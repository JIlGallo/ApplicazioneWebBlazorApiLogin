@page "/gps"
@inject GeolocationService GeolocationService
@inject IJSRuntime JSRuntime

<div class="container my-5">
    <h1 class="display-4 text-center mb-4">Geolocation</h1>
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg rounded-3">
                <div class="card-body p-4">
                    @if (_coordinates != null)
                    {
                        <div class="row mb-3">
                            <div class="col-6 fw-bold text-primary">Latitude:</div>
                            <div class="col-6 text-end text-secondary">@_coordinates.Latitude</div>
                        </div>
                        <hr class="my-3">
                        <div class="row mb-3">
                            <div class="col-6 fw-bold text-primary">Longitude:</div>
                            <div class="col-6 text-end text-secondary">@_coordinates.Longitude</div>
                        </div>
                    }
                    else if (_error != null)
                    {
                        <div class="alert alert-danger text-center" role="alert">
                            Error: @_error
                        </div>
                    }
                    else
                    {
                        <div class="d-flex justify-content-center">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private GeolocationCoordinates? _coordinates;
    private string? _error;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Invoca la función JavaScript getCurrentPosition()
            _coordinates = await JSRuntime.InvokeAsync<GeolocationCoordinates>(
                "eval", // Usa 'eval' para ejecutar el código JavaScript directamente
                    @"(function() {
                    return new Promise((resolve, reject) => {
                        if (navigator.geolocation) {
                            navigator.geolocation.getCurrentPosition(
                                (position) => {
                                    resolve({
                                        latitude: position.coords.latitude,
                                        longitude: position.coords.longitude,
                                    });
                                },
                                (error) => {
                                    reject(error.message);
                                }
                            );
                        } else {
                            reject('Geolocation is not supported by this browser.');
                        }
                    });
                })()"
            );
        }
        catch (Exception ex)
        {
            _error = ex.Message;
        }
    }
}